%% Emmanouil Christos 8804
% Multimedia Project 2019 - 2020
% Part 2 - JPEG Intergration
% 2.1.1 Funtion JPEGencode
function JPEGenc = JPEGencode(img, subimg, qScale)
%% Tables Initializations
qTableL = [  16  11  10  16  24  40  51  61  ;
             12  12  14  19  26  58  60  55  ;
             14  13  16  24  40  57  69  56  ;
             14  17  22  29  51  87  80  62  ;
             18  22  37  56  68  109 103 77  ;
             24  35  55  64  81  104 113 92  ;
             49  64  78  87  103 121 120 101 ;
             72  92  95  98  112 100 103 99  ];
    
% Table K2 – Chrominance quantization table
qTableC = [  17	18	24	47	99	99	99	99  ;
             18	21  26  66  99  99  99  99  ;
             24	26  56  99  99  99  99  99  ;
             47	66  99  99  99  99  99  99  ;
             99	99  99  99  99  99  99  99  ;
             99	99  99  99  99  99  99  99  ;
             99	99  99  99  99  99  99  99  ;
             99	99  99  99  99  99  99  99  ];
         
% Table K3 – Table for luminance DC coefficient differences
DCL = [ "00"	"010"	"011"	"100"   "101"   "110"	"1110"	"11110"	"111110"	"1111110"	"11111110"	"111111110"];

% Table K4 – Table for chrominance DC coefficient differences
DCC = [ "00"	"01"	"10"	"110"	"1110"	"11110" "111110"	"1111110"	"11111110"	"111111110"	"1111111110"	"11111111110"];
         
% Table K5 – Table for luminance AC coefficients
ACL = [ "1010"          "00"                "01"                "100"               "1011"              "11010"             "1111000"           "11111000"          "1111110110"        "1111111110000010"  "1111111110000011"  ;   
        ""              "1100"              "11011"             "1111001"           "111110110"         "11111110110"       "1111111110000100"  "1111111110000101"  "1111111110000110"  "1111111110000111"  "1111111110001000"  ;
        ""              "11100"             "11111001"          "1111110111"        "111111110100"      "1111111110001001"  "1111111110001010"  "1111111110001011"  "1111111110001100"  "1111111110001101"  "1111111110001110"  ;
        ""              "111010"            "111110111"         "111111110101"      "1111111110001111"  "1111111110010000"  "1111111110010001"  "1111111110010010"  "1111111110010011"  "1111111110010100"  "1111111110010101"  ;
        ""              "111011"            "1111111000"        "1111111110010110"  "1111111110010111"  "1111111110011000"  "1111111110011001"  "1111111110011010"  "1111111110011011"  "1111111110011100"  "1111111110011101"  ;
        ""              "1111010"           "111111101111"      "1111111110011110"  "1111111110011111"  "1111111110100000"  "1111111110100001"  "1111111110100010"  "1111111110100011"  "1111111110100100"  "1111111110100101"  ;
        ""              "1111011"           "111111110110"      "1111111110100110"  "1111111110100111"  "1111111110101000"  "1111111110101001"  "1111111110101010"  "1111111110101011"  "1111111110101100"  "1111111110101101"  ;
        ""              "11111010"          "111111110111"      "1111111110101110"  "1111111110101111"  "1111111110110000"  "1111111110110001"  "1111111110110010"  "1111111110110011"  "1111111110110100"  "1111111110110101"  ;
        ""              "111111000"         "111111111000000"   "1111111110110110"  "1111111110110111"  "1111111110111000"  "1111111110111001"  "1111111110111010"  "1111111110111011"  "1111111110111100"  "1111111110111101"  ;
        ""              "111111001"         "1111111110111110"  "1111111110111111"  "1111111111000000"  "1111111111000001"  "1111111111000010"  "1111111111000011"  "1111111111000100"  "1111111111000101"  "1111111111000110"  ;
        ""              "111111010"         "1111111111000111"  "1111111111001000"  "1111111111001001"  "1111111111001010"  "1111111111001011"  "1111111111001100"  "1111111111001101"  "1111111111001110"  "1111111111001111"  ;
        ""              "1111111001"        "1111111111010000"  "1111111111010001"  "1111111111010010"  "1111111111010011"  "1111111111010100"  "1111111111010101"  "1111111111010110"  "1111111111010111"  "1111111111011000"  ;
        ""              "1111111010"        "1111111111011001"  "1111111111011010"  "1111111111011011"  "1111111111011100"  "1111111111011101"  "1111111111011110"  "1111111111011111"  "1111111111100000"  "1111111111100001"  ;
        ""              "11111111000"       "1111111111100010"  "1111111111100011"  "1111111111100100"  "1111111111100101"  "1111111111100110"  "1111111111100111"  "1111111111101000"  "1111111111101001"  "1111111111101010"  ;
        ""              "1111111111101011"  "1111111111101100"  "1111111111101101"  "1111111111101110"  "1111111111101111"  "1111111111110000"  "1111111111110001"  "1111111111110010"  "1111111111110011"  "1111111111110100"  ;
        "11111111001"	"1111111111110101"  "1111111111110110"  "1111111111110111"  "1111111111111000"  "1111111111111001"  "1111111111111010"  "1111111111111011"  "1111111111111100"  "1111111111111101"  "1111111111111110"  ];
    
ACC = [ "00"            "01"                "100"               "1010"              "11000"             "11001"             "111000"            "1111000"           "111110100"         "1111110110"        "111111110100"  ;   
        ""              "1011"              "111001"            "11110110"          "111110101"         "11111110110"       "111111110101"      "1111111110001000"  "1111111110001001"  "1111111110001010"  "1111111110001011"  ;
        ""              "11010"             "11110111"          "1111110111"        "111111110110"      "111111111000010"   "1111111110001100"  "1111111110001101"  "1111111110001110"  "1111111110001111"  "1111111110010000"  ;
        ""              "11011"             "11111000"          "1111111000"        "111111110111"      "1111111110010001"  "1111111110010010"  "1111111110010011"  "1111111110010100"  "1111111110010101"  "1111111110010110"  ;
        ""              "111010"            "111110110"         "1111111110010111"  "1111111110011000"  "1111111110011001"  "1111111110011010"  "1111111110011011"  "1111111110011100"  "1111111110011101"  "1111111110011110"  ;
        ""              "111011"            "1111111001"        "1111111110011111"  "1111111110100000"  "1111111110100001"  "1111111110100010"  "1111111110100011"  "1111111110100100"  "1111111110100101"  "1111111110100110"  ;
        ""              "1111001"           "11111110111"       "1111111110100111"  "1111111110101000"  "1111111110101001"  "1111111110101010"  "1111111110101011"  "1111111110101100"  "1111111110101101"  "1111111110101110"  ;
        ""              "1111010"           "11111111000"       "1111111110101111"  "1111111110110000"  "1111111110110001"  "1111111110110010"  "1111111110110011"  "1111111110110100"  "1111111110110101"  "1111111110110110"  ;
        ""              "11111001"          "1111111110110111"  "1111111110111000"  "1111111110111001"  "1111111110111010"  "1111111110111011"  "1111111110111100"  "1111111110111101"  "1111111110111110"  "1111111110111111"  ;
        ""              "111110111"         "1111111111000000"  "1111111111000001"  "1111111111000010"  "1111111111000011"  "1111111111000100"  "1111111111000101"  "1111111111000110"  "1111111111000111"  "1111111111001000"  ;
        ""              "111111000"         "1111111111001001"  "1111111111001010"  "1111111111001011"  "1111111111001100"  "1111111111001101"  "1111111111001110"  "1111111111001111"  "1111111111010000"  "1111111111010001"  ;
        ""              "111111001"         "1111111111010010"  "1111111111010011"  "1111111111010100"  "1111111111010101"  "1111111111010110"  "1111111111010111"  "1111111111011000"  "1111111111011001"  "1111111111011010"  ;
        ""              "111111010"         "1111111111011011"  "1111111111011100"  "1111111111011101"  "1111111111011110"  "1111111111011111"  "1111111111100000"  "1111111111100001"  "1111111111100010"  "1111111111100011"  ;
        ""              "11111111001"       "1111111111100100"  "1111111111100101"  "1111111111100110"  "1111111111100111"  "1111111111101000"  "1111111111101001"  "1111111111101010"  "1111111111101011"  "1111111111101100"  ;
        ""              "11111111100000"    "1111111111101101"  "1111111111101110"  "1111111111101111"  "1111111111110000"  "1111111111110001"  "1111111111110010"  "1111111111110011"  "1111111111110100"  "1111111111110101"  ;
        "1111111010"	"111111111000011"	"1111111111110110"	"1111111111110111"	"1111111111111000"	"1111111111111001"	"1111111111111010"	"1111111111111011"	"1111111111111100"	"1111111111111101"	"1111111111111110"  ];
    
global DCtable;
global ACtable;

%% Initialize JPEGenc
% Tables Info. Struct
TablesInfo(1).qTableL = qTableL * qScale;
TablesInfo(1).qTableC = qTableC * qScale;
TablesInfo(1).DCL = cellstr(DCL);
TablesInfo(1).DCC = cellstr(DCC);
TablesInfo(1).ACL = cellstr(ACL);
TablesInfo(1).ACC = cellstr(ACC);

% Blocks Info. Struct
BlocksInfo(1).blkType = '';
BlocksInfo(1).indHor = '';
BlocksInfo(1).indVer = '';
BlocksInfo(1).huffStream = '';

% JPEGenc Cell
JPEGenc(1) = {TablesInfo(1)};
count = 2;

%% Convert to YCbCr
[imgY, imgCb, imgCr] = convert2ycbcr(img, subimg);

%% DCT - Quantization - ZigZag - Huffman - Add to Cell
% Luminance (Y) component
qTable = qTableL;
DCtable = DCL;
ACtable = ACL;
DCpredY = 0;
for i = 0:8:(size(imgY, 1)-8)+1
    for j = 0:8:(size(imgY, 2)-8)+1
        % Create blocks
        blockY = imgY(i+1:i+8, j+1:j+8);
        % DCT transform 
        dctBlockY = blockDCT(blockY);  
        % Quantization
        qBlockY = quantizeJPEG(dctBlockY, qTable, qScale);
        % ZigZag
        runSymbolsY = runLength(qBlockY, DCpredY);
        DCpredY = runSymbolsY(1, 2);
        % Huffman
        huffStreamY = huffEnc(runSymbolsY);
        % Add to Cell
        BlocksInfo(count - 1).blkType = "Y";
        BlocksInfo(count - 1).indHor = j+1;
        BlocksInfo(count - 1).indVer = i+1;
        BlocksInfo(count - 1).huffStream = huffStreamY;
        
        JPEGenc(count) = {BlocksInfo(count - 1)};     
        count = count + 1; 
    end
end

% Chrominance (Cb, Cr) components
qTable = qTableC;
DCtable = DCC;
ACtable = ACC;
DCpredCb = 0;
DCpredCr = 0;
for i = 0:8:(size(imgCb, 1)-8)+1
    for j = 0:8:(size(imgCb, 2)-8)+1
        % Create blocks
        blockCb = imgCb(i+1:i+8, j+1:j+8);
        blockCr = imgCr(i+1:i+8, j+1:j+8);
        % DCT transform 
        dctBlockCb = blockDCT(blockCb);
        dctBlockCr = blockDCT(blockCr);
        % Quantization
        qBlockCb = quantizeJPEG(dctBlockCb, qTable, qScale);
        qBlockCr = quantizeJPEG(dctBlockCr, qTable, qScale);
        % ZigZag
        runSymbolsCb = runLength(qBlockCb, DCpredCb);
        runSymbolsCr = runLength(qBlockCr, DCpredCr);
        DCpredCb = runSymbolsCb(1, 2);
        DCpredCr = runSymbolsCr(1, 2);
        % Huffman
        huffStreamCb = huffEnc(runSymbolsCb);
        huffStreamCr = huffEnc(runSymbolsCr);
        % Add to Cell
        BlocksInfo(count - 1).blkType = "Cb";
        BlocksInfo(count - 1).indHor = j+1;
        BlocksInfo(count - 1).indVer = i+1;
        BlocksInfo(count - 1).huffStream = huffStreamCb;
        JPEGenc(count) = {BlocksInfo(count - 1)};     
        count = count + 1;
        BlocksInfo(count - 1).blkType = "Cr";
        BlocksInfo(count - 1).indHor = j+1;
        BlocksInfo(count - 1).indVer = i+1;
        BlocksInfo(count - 1).huffStream = huffStreamCr;
        JPEGenc(count) = {BlocksInfo(count - 1)}; 
        count = count + 1;        
    end
end

end
